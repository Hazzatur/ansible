- name: Configuration
  tags: &tags_read_config [ 'install', 'core' ]
  block:
    - name: Gather package facts
      package_facts:
        manager: apt

    - name: Reading config file
      shell: cat config.json
      register: result

    - name: Set fact from config file
      set_fact:
        jsondata: "{{ result.stdout | from_json }}"

    # Apps
    - name: Set apps config
      set_fact:
        cfg_apps: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'config.apps'

    - name: Read apps config
      block:
        - name: Opera config
          set_fact:
            cfg_opera: "{{ jsondata | json_query(jmesquery) }}"
          vars:
            jmesquery: 'config.appList.opera'
      when: cfg_apps == True

    # Gaming
    - name: Set gaming config
      set_fact:
        cfg_gaming: "{{ jsondata | json_query(jmesquery) }}"
      vars:
        jmesquery: 'config.gaming'

    - name: Read games & emulators config
      block:
        - name: Steam config
          set_fact:
            cfg_steam: "{{ jsondata | json_query(jmesquery) }}"
          vars:
            jmesquery: 'config.games.steam'
      
        - name: Proton config
          set_fact:
            cfg_proton: "{{ jsondata | json_query(jmesquery) }}"
          vars:
            jmesquery: 'config.games.proton'
      
        - name: Yuzu config
          set_fact:
            cfg_yuzu: "{{ jsondata | json_query(jmesquery) }}"
          vars:
            jmesquery: 'config.games.yuzu'
      
        - name: RetroArch cofig
          set_fact:
            cfg_retroArch: "{{ jsondata | json_query(jmesquery) }}"
          vars:
            jmesquery: 'config.games.retroArch'
      when: cfg_gaming == True
      
